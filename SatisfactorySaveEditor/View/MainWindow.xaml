<Window x:Class="SatisfactorySaveEditor.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=System.Runtime"
        xmlns:converter="clr-namespace:SatisfactorySaveEditor.Converter" 
        xmlns:editorModel="clr-namespace:SatisfactorySaveParser.Save;assembly=SatisfactorySaveParser"
        xmlns:model="clr-namespace:SatisfactorySaveEditor.Model"
        xmlns:util="clr-namespace:SatisfactorySaveEditor.Util"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:command="http://www.galasoft.ch/mvvmlight"
        xmlns:dd="urn:gong-wpf-dragdrop"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:toast="clr-namespace:SatisfactorySaveEditor.Service.Toast"
        xmlns:control="clr-namespace:SatisfactorySaveEditor.View.Control"
        mc:Ignorable="d"
        dd:DragDrop.IsDropTarget="True"
        dd:DragDrop.DropHandler="{Binding .}"
        Closed="Window_Closed"
        MinWidth="1280"
        MinHeight="720"
        DataContext="{Binding MainViewModel, Source={StaticResource Locator}, Mode=OneTime}"
        Title="{Binding FileName, StringFormat='Satisfactory Save Editor{0}'}">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <command:EventToCommand Command="{Binding ExitCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <util:BindingProxy x:Key="Proxy" Data="{Binding}"/>
        <converter:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <converter:MenuTextConverter x:Key="MenuTextConverter"/>
        <converter:TypeTooltipConverter x:Key="TypeTooltipConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Modifiers="Control" Key="O" Command="{Binding OpenCommand}" />
        <KeyBinding Modifiers="Control" Key="S" Command="{Binding SaveCommand}">
            <KeyBinding.CommandParameter>
                <sys:Boolean>False</sys:Boolean>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="F12" Command="{Binding SaveCommand}">
            <KeyBinding.CommandParameter>
                <sys:Boolean>True</sys:Boolean>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Modifiers="Control" Key="J" Command="{Binding JumpMenuCommand}" />
    </Window.InputBindings>
    <DockPanel>
        <Menu DockPanel.Dock="Top" IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}}">
            <MenuItem Header="_File">
                <MenuItem Header="_Open..." InputGestureText="Ctrl+O" Command="{Binding OpenCommand}"/>
                <MenuItem Header="Open recent" ItemsSource="{Binding SaveService.LastFiles}" Command="{Binding OpenCommand}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="Command" Value="{Binding Source={StaticResource Proxy}, Path=Data.OpenCommand}"/>
                            <Setter Property="CommandParameter" Value="{Binding}"/>
                            <Setter Property="Header" Value="{Binding ., Converter={StaticResource MenuTextConverter}}"/>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <MenuItem Header="_Save" InputGestureText="Ctrl+S" Command="{Binding SaveCommand}">
                    <MenuItem.CommandParameter>
                        <sys:Boolean>False</sys:Boolean>
                    </MenuItem.CommandParameter>
                </MenuItem>
                <MenuItem Header="_Save as..." InputGestureText="F12" Command="{Binding SaveCommand}">
                    <MenuItem.CommandParameter>
                        <sys:Boolean>True</sys:Boolean>
                    </MenuItem.CommandParameter>
                </MenuItem>
                <MenuItem Header="_Create backup" Command="{Binding ManualBackupCommand}"/>
                <Separator/>
                <MenuItem Header="Jump to tag..." InputGestureText="Ctrl+J" Command="{Binding JumpMenuCommand}"/>
                <Separator/>
                <MenuItem Header="Preferences" Command="{Binding PreferencesCommand}"/>
                <MenuItem Header="_Exit" InputGestureText="Alt+F4" Command="{Binding ExitCommand}"/>
            </MenuItem>
            <MenuItem Header="_Cheats" ItemsSource="{Binding CheatService.CheatInfo}">
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="{x:Type MenuItem}">
                        <Setter Property="ToolTip.Content" Value="{Binding Description}" />
                        <Setter Property="Header" Value="{Binding Name}" />
                        <Setter Property="Command" Value="{Binding Source={StaticResource Proxy}, Path=Data.CheatCommand}" />
                        <Setter Property="CommandParameter" Value="{Binding Type}" />
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="View guides on ficsit.app" Command="{Binding OpenBrowserCommand}" CommandParameter="https://ficsit.app/guide/Z8h6z2CczH43c"/>
                <MenuItem Header="Request help on Discord" Command="{Binding OpenBrowserCommand}" CommandParameter="https://discord.gg/rNxYXht"/>
                <Separator/>
                <MenuItem Header="View on GitHub" Command="{Binding OpenBrowserCommand}" CommandParameter="https://github.com/Goz3rr/SatisfactorySaveEditor#help"/>
                <MenuItem Header="Report an Issue" Command="{Binding OpenBrowserCommand}" CommandParameter="https://github.com/Goz3rr/SatisfactorySaveEditor/issues"/>
                <MenuItem Header="Check for updates" Command="{Binding CheckUpdatesCommand}"/>
                <Separator/>
                <MenuItem Header="About" Command="{Binding AboutCommand}"/>
            </MenuItem>
        </Menu>
        <Separator DockPanel.Dock="Top" Opacity="0.25"/>
        <Grid Margin="5">

            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="260" Width="2*"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition MinWidth="390" Width="3*"/>
            </Grid.ColumnDefinitions>

            <ItemsControl VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Grid.ColumnSpan="3" ItemsSource="{Binding ToastService.ActiveToasts}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type toast:ToastViewModel}">
                        <control:Toast Title="{Binding Title}" Text="{Binding Text}" Icon="{Binding Icon}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <DockPanel Grid.Column="0">
                <Grid DockPanel.Dock="Top">
                    <TextBox Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Stretch" x:Name="SearchTermTextBox" Margin="0,2"/>
                    <TextBlock IsHitTestVisible="False" Text="Search Save Entity and Component names" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="6,0,0,0" Foreground="DarkGray">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Text, ElementName=SearchTermTextBox}" Value="">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Image Source="../../Icon/search.png" RenderOptions.BitmapScalingMode="Fant" HorizontalAlignment="Right" Width="13" Height="13" Margin="0,0,6,0">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Text, ElementName=SearchTermTextBox}" Value="">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>

                    <Button Margin="0,0,6,0" Width="13" Height="13" VerticalContentAlignment="Center" HorizontalAlignment="Right" Command="{Binding ResetSearchCommand}">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Text, ElementName=SearchTermTextBox}" Value="">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Button.Content>
                            <TextBlock Text="X" FontWeight="DemiBold" Foreground="Red" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Button.Content>
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid x:Name="grid">
                                    <Border x:Name="border" CornerRadius="3" BorderBrush="#707070" BorderThickness="1" Background="White">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" TextElement.FontWeight="Normal"/>
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#BEE6FD"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="#3C7FB1"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="BorderBrush" TargetName="border" Value="#2C628B"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </Grid>
                <TreeView DockPanel.Dock="Top" VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling" Name="SaveNodeTreeView" ItemsSource="{Binding RootItems}">
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <EventSetter Event="Selected" Handler="TreeViewSelectedItemChanged"/>
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                            <Setter Property="ToolTip" Value="{Binding Name, Mode=OneTime, Converter={StaticResource TypeTooltipConverter}}"/>
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu>
                                        <MenuItem Header="Copy name" Command="{x:Static model:SaveObjectTreeModel.CopyNameCommand}" CommandParameter="{Binding .}"/>
                                        <MenuItem Header="Copy path" Command="{x:Static model:SaveObjectTreeModel.CopyPathCommand}" CommandParameter="{Binding .}"/>
                                        <Separator/>
                                        <MenuItem Header="Delete" Command="{Binding Source={StaticResource Proxy}, Path=Data.DeleteCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.DataContext}"/>
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedItemChanged">
                            <command:EventToCommand Command="{Binding Source={StaticResource Proxy}, Path=Data.TreeSelectCommand}" CommandParameter="{Binding ElementName=SaveNodeTreeView, Path=SelectedItem}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <TreeView.Resources>
                        <HierarchicalDataTemplate DataType="{x:Type model:SaveObjectTreeModel}" ItemsSource="{Binding Children}">
                            <StackPanel Orientation="Horizontal">
                                <CheckBox IsThreeState="True" IsChecked="{Binding IsMultiSelected}" Margin="0,1,2,0"/>
                                <TextBlock>
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ObjectKind}" Value="{x:Static model:SaveObjectTreeModel+SaveObjectTreeKind.Component}">
                                                    <Setter Property="Foreground" Value="Green" />
                                                    <Setter Property="Text" Value="[C] " />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ObjectKind}" Value="{x:Static model:SaveObjectTreeModel+SaveObjectTreeKind.Actor}">
                                                    <Setter Property="Foreground" Value="Blue" />
                                                    <Setter Property="Text" Value="[A] " />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ObjectKind}" Value="{x:Static model:SaveObjectTreeModel+SaveObjectTreeKind.TreeNode}">
                                                    <Setter Property="Foreground" Value="Violet" />
                                                    <Setter Property="Text" Value="[O] " />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBlock Text="{Binding DisplayName}"></TextBlock>
                            </StackPanel>
                        </HierarchicalDataTemplate>
                    </TreeView.Resources>
                </TreeView>
            </DockPanel>

            <GridSplitter HorizontalAlignment="Center" Width="3" Grid.Column="1"/>
            <ContentControl Grid.Column="2" Content="{Binding SelectedItem.Model}">
                <ContentControl.Resources>
                    <DataTemplate DataType="{x:Type editorModel:SaveObject}">
                        <xctk:PropertyGrid Grid.Column="2" Margin="5" SelectedObject="{Binding .}"/>
                    </DataTemplate>
                    <!--
                    <DataTemplate DataType="{x:Null}">
                        <TextBlock Visibility="Hidden" Text="This actor is only a reference to a deleted object, it contains no actual data.">
                            <TextBlock.Triggers>
                                <DataTrigger Binding="{Binding ObjectKind}" Value="{x:Static model:SaveObjectTreeModel+SaveObjectTreeKind.Actor}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </TextBlock.Triggers>
                        </TextBlock>
                    </DataTemplate>
                    -->
                </ContentControl.Resources>
            </ContentControl>
            <StackPanel Margin="5" Visibility="{Binding IsJumping, Converter={StaticResource BooleanToVisibilityConverter}}" Grid.RowSpan="1" Grid.ColumnSpan="3">
                <Border HorizontalAlignment="Center" Padding="5" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
                    <StackPanel>
                        <TextBlock VerticalAlignment="Top" FontSize="18" HorizontalAlignment="Center" Text="Enter class name to jump to"/>
                        <TextBox x:Name="SearchBox" Text="{Binding JumpSearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5,0,0" Padding="5" Width="600" FontSize="22" util:FocusExtension.IsFocused="{Binding IsJumping}" VerticalAlignment="Top" HorizontalAlignment="Center">
                            <TextBox.InputBindings>
                                <KeyBinding Command="{Binding JumpSearchCommand}" CommandParameter="{Binding ElementName=SearchBox, Path=Text}" Key="Return"/>
                            </TextBox.InputBindings>
                        </TextBox>
                    </StackPanel>
                </Border>
            </StackPanel>
            <Border BorderBrush="Black" BorderThickness="1" Background="#80000000" Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}" Grid.RowSpan="1" Grid.ColumnSpan="3" Padding="100">
                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Stretch" Orientation="Vertical">
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="Margin" Value="0,0,0,10"/>
                        </Style>
                        <Style TargetType="{x:Type ProgressBar}">
                            <Setter Property="Margin" Value="0,5,0,20"/>
                        </Style>
                    </StackPanel.Resources>
                    <TextBlock Margin="0" TextWrapping="Wrap" Text="{Binding ProgressModel.TopText}" HorizontalAlignment="Center" FontSize="24" Foreground="#7EFFFFFF"/>
                    <ProgressBar Height="20" Value="{Binding ProgressModel.TopProgress}"/>
                    <TextBlock Margin="0" TextWrapping="Wrap" Text="{Binding ProgressModel.BottomText}" HorizontalAlignment="Center" FontSize="24" Foreground="#7EFFFFFF"/>
                    <ProgressBar IsIndeterminate="{Binding ProgressModel.BottomIndeterminate}" Height="20" Value="{Binding ProgressModel.BottomProgress}"/>
                </StackPanel>
            </Border>
        </Grid>
    </DockPanel>
</Window>
